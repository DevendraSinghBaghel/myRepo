Anonymous function
===================
var diff = function  ( a, b) {
}; -> new style loads only when this line of code is reached ,

call like diff ( a,b)
console.log(diff) - return the function body returned

function test1 ( a, b) {
} old style,loads when the prgm loads

map function example
=====================

var res = numbers.map ( function (arraycell) {
			return arraycell *2;
}

);

The specific list of “falsy” values in JavaScript is as follows:

-"" (empty string)
-0, -0, NaN (invalid number)
-null, undefined
-false

- The difference between == and === is usually characterized that ==checks for value equality and === checks for both value and typeequality. 
 However, this is inaccurate. The proper way to characterizethem is that == checks for value equality with coercion allowed, 
 and=== checks for value equality without allowing coercion; === isoften called “strict equality” for this reason.
- for enforcing more stricter coding in JS use "use strict"

var x = function bar(){
    // ..
}; ---- function expersion


- closure is a way to “remember” and continue to access afunction’s scope (its variables) even once the function has finishedrunning.

- If a function has a this reference inside it, that thisreference usually points to an object.
 But which object it points todepends on how the function was called.
 It’s important to realize that this does not refer to the functionitself, as is the most common misconception.
